// <auto-generated />
using System;
using LignarisBack.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LignarisBack.Migrations
{
    [DbContext(typeof(LignarisPizzaContext))]
    [Migration("20240810040214_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LignarisBack.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("LignarisBack.Models.CarritoCompras", b =>
                {
                    b.Property<int?>("IdCarritoCompras")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_carritocompras");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("IdCarritoCompras"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdRecetas")
                        .HasColumnType("int");

                    b.HasKey("IdCarritoCompras")
                        .HasName("PK__cliente__677F38F5A3993B9J");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdRecetas");

                    b.ToTable("carritocompras", (string)null);
                });

            modelBuilder.Entity("LignarisBack.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<int>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnName("id_persona");

                    b.Property<string>("IdUsuario")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id_usuario");

                    b.HasKey("IdCliente")
                        .HasName("PK__cliente__677F38F5A3993B3C");

                    b.HasIndex("IdPersona");

                    b.HasIndex("IdUsuario");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("LignarisBack.Models.Compra", b =>
                {
                    b.Property<int>("IdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_compra");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompra"));

                    b.Property<DateOnly>("FechaCompra")
                        .HasColumnType("date")
                        .HasColumnName("fecha_compra");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int")
                        .HasColumnName("Id_empleado");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int")
                        .HasColumnName("Id_proveedor");

                    b.HasKey("IdCompra")
                        .HasName("PK__compra__C4BAA6044664E5EF");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdProveedor");

                    b.ToTable("compra", (string)null);
                });

            modelBuilder.Entity("LignarisBack.Models.CompraDetalle", b =>
                {
                    b.Property<int>("IdCompraDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_compra_detalle");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCompraDetalle"));

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("cantidad");

                    b.Property<DateOnly?>("FechaCaducidad")
                        .HasColumnType("date")
                        .HasColumnName("fecha_caducidad");

                    b.Property<int?>("IdCompra")
                        .HasColumnType("int")
                        .HasColumnName("id_compra");

                    b.Property<int?>("IdMateriaPrima")
                        .HasColumnType("int")
                        .HasColumnName("id_materia_prima");

                    b.Property<string>("NumLote")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("num_lote");

                    b.Property<int?>("PrecioUnitario")
                        .HasColumnType("int")
                        .HasColumnName("precio_unitario");

                    b.HasKey("IdCompraDetalle")
                        .HasName("PK__compra_d__C08AA0066404E084");

                    b.HasIndex("IdCompra");

                    b.HasIndex("IdMateriaPrima");

                    b.ToTable("compra_detalle", (string)null);
                });

            modelBuilder.Entity("LignarisBack.Models.Empleado", b =>
                {
                    b.Property<int>("IdEmpleado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_empleado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmpleado"));

                    b.Property<int>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnName("id_persona");

                    b.Property<string>("IdUsuario")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id_usuario");

                    b.Property<string>("Puesto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("puesto");

                    b.HasKey("IdEmpleado")
                        .HasName("PK__empleado__88B513943E6A5F08");

                    b.HasIndex("IdPersona");

                    b.HasIndex("IdUsuario");

                    b.ToTable("empleado", (string)null);
                });

            modelBuilder.Entity("LignarisBack.Models.Inventario", b =>
                {
                    b.Property<int>("IdInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_inventario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInventario"));

                    b.Property<decimal?>("CantidadDisponible")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("cantidad_disponible");

                    b.Property<int?>("Estatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("estatus");

                    b.Property<int?>("IdCompraDetalle")
                        .HasColumnType("int")
                        .HasColumnName("id_compra_detalle");

                    b.HasKey("IdInventario")
                        .HasName("PK__inventar__013AEB511138B038");

                    b.HasIndex("IdCompraDetalle");

                    b.ToTable("inventario", (string)null);
                });

            modelBuilder.Entity("LignarisBack.Models.MateriaPrima", b =>
                {
                    b.Property<int>("IdMateriaPrima")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_materia_prima");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMateriaPrima"));

                    b.Property<decimal?>("CantidadMinima")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("cantidad_minima");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("TipoMedida")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("tipo_medida");

                    b.HasKey("IdMateriaPrima")
                        .HasName("PK__materia___1BCDA74B50B9D580");

                    b.ToTable("materia_prima", (string)null);
                });

            modelBuilder.Entity("LignarisBack.Models.MateriaProveedorIntermedium", b =>
                {
                    b.Property<int>("IdMateriaProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_materia_proveedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMateriaProveedor"));

                    b.Property<int>("IdMateriaPrima")
                        .HasColumnType("int")
                        .HasColumnName("id_materia_prima");

                    b.Property<int>("IdProveedor")
                        .HasColumnType("int")
                        .HasColumnName("id_proveedor");

                    b.HasKey("IdMateriaProveedor")
                        .HasName("PK__materia___C380E4DD145ECA3E");

                    b.HasIndex("IdMateriaPrima");

                    b.HasIndex("IdProveedor");

                    b.ToTable("materia_proveedor_intermedia", (string)null);
                });

            modelBuilder.Entity("LignarisBack.Models.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_persona");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPersona"));

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("apellido_materno");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("apellido_paterno");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("telefono");

                    b.HasKey("IdPersona")
                        .HasName("PK__persona__228148B05E9E6BC2");

                    b.ToTable("persona", (string)null);
                });

            modelBuilder.Entity("LignarisBack.Models.Produccion", b =>
                {
                    b.Property<int>("IdProduccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_produccion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduccion"));

                    b.Property<DateTime?>("FechaProduccion")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_produccion");

                    b.Property<int?>("IdEmpleado")
                        .HasColumnType("int")
                        .HasColumnName("id_empleado");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("id_venta");

                    b.HasKey("IdProduccion")
                        .HasName("PK__producci__9EBBA4330F7A26BC");

                    b.HasIndex("IdEmpleado");

                    b.HasIndex("IdVenta");

                    b.ToTable("produccion", (string)null);
                });

            modelBuilder.Entity("LignarisBack.Models.Proveedor", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_proveedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<int?>("Estatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("estatus");

                    b.Property<int>("IdPersona")
                        .HasColumnType("int")
                        .HasColumnName("id_persona");

                    b.HasKey("IdProveedor")
                        .HasName("PK__proveedo__8D3DFE289762FB9F");

                    b.HasIndex("IdPersona");

                    b.ToTable("proveedor", (string)null);
                });

            modelBuilder.Entity("LignarisBack.Models.RecetaDetalle", b =>
                {
                    b.Property<int>("IdRecetaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_receta_detalle");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRecetaDetalle"));

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("cantidad");

                    b.Property<int>("IdMateriaPrima")
                        .HasColumnType("int")
                        .HasColumnName("id_materia_prima");

                    b.Property<int?>("IdReceta")
                        .HasColumnType("int")
                        .HasColumnName("id_receta");

                    b.HasKey("IdRecetaDetalle")
                        .HasName("PK__receta_d__F085822D7618FBF1");

                    b.HasIndex("IdMateriaPrima");

                    b.HasIndex("IdReceta");

                    b.ToTable("receta_detalle", (string)null);
                });

            modelBuilder.Entity("LignarisBack.Models.Recetum", b =>
                {
                    b.Property<int>("IdReceta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_receta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReceta"));

                    b.Property<int?>("Estatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("estatus");

                    b.Property<string>("Foto")
                        .HasColumnType("text")
                        .HasColumnName("foto");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nombre");

                    b.Property<double?>("PrecioUnitario")
                        .HasColumnType("float")
                        .HasColumnName("precio_unitario");

                    b.Property<int?>("Tamanio")
                        .HasColumnType("int")
                        .HasColumnName("tamanio");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdReceta")
                        .HasName("PK__receta__11DB53ABB651B1C6");

                    b.ToTable("receta", (string)null);
                });

            modelBuilder.Entity("LignarisBack.Models.RegistroSesione", b =>
                {
                    b.Property<int>("IdRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_registro");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRegistro"));

                    b.Property<int?>("EstatusSesion")
                        .HasColumnType("int")
                        .HasColumnName("estatus_sesion");

                    b.Property<DateTime?>("FechaHoraAccion")
                        .HasColumnType("datetime")
                        .HasColumnName("fecha_hora_accion");

                    b.Property<string>("IdUsuario")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("id_usuario");

                    b.HasKey("IdRegistro")
                        .HasName("PK__registro__48155C1F728AC443");

                    b.HasIndex("IdUsuario");

                    b.ToTable("registro_sesiones", (string)null);
                });

            modelBuilder.Entity("LignarisBack.Models.VentaDetalle", b =>
                {
                    b.Property<int>("IdVentaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_venta_detalle");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVentaDetalle"));

                    b.Property<decimal?>("Cantidad")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("cantidad");

                    b.Property<int?>("IdReceta")
                        .HasColumnType("int")
                        .HasColumnName("id_receta");

                    b.Property<int?>("IdVenta")
                        .HasColumnType("int")
                        .HasColumnName("id_venta");

                    b.HasKey("IdVentaDetalle")
                        .HasName("PK__venta_de__7AA8F41B68D795FB");

                    b.HasIndex("IdReceta");

                    b.HasIndex("IdVenta");

                    b.ToTable("venta_detalle", (string)null);
                });

            modelBuilder.Entity("LignarisBack.Models.Ventum", b =>
                {
                    b.Property<int>("IdVenta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_venta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenta"));

                    b.Property<int?>("Estatus")
                        .HasColumnType("int")
                        .HasColumnName("estatus");

                    b.Property<DateOnly?>("FechaVenta")
                        .HasColumnType("date")
                        .HasColumnName("fecha_venta");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("id_cliente");

                    b.Property<int?>("IdEmpleado")
                        .HasColumnType("int")
                        .HasColumnName("id_empleado");

                    b.Property<double?>("Total")
                        .HasColumnType("float")
                        .HasColumnName("total");

                    b.HasKey("IdVenta")
                        .HasName("PK__venta__459533BF9A62FD80");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdEmpleado");

                    b.ToTable("venta", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("LignarisBack.Models.CarritoCompras", b =>
                {
                    b.HasOne("LignarisBack.Models.Cliente", "Cliente")
                        .WithMany("CarritoCompras")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LignarisBack.Models.Recetum", "Recetum")
                        .WithMany("CarritoCompras")
                        .HasForeignKey("IdRecetas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Recetum");
                });

            modelBuilder.Entity("LignarisBack.Models.Cliente", b =>
                {
                    b.HasOne("LignarisBack.Models.Persona", "IdPersonaNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("IdPersona")
                        .IsRequired()
                        .HasConstraintName("FK_id_persona_Cliente");

                    b.HasOne("LignarisBack.Models.AppUser", "IdUsuarioNavigation")
                        .WithMany("Clientes")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_id_usuario_Cliente");

                    b.Navigation("IdPersonaNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("LignarisBack.Models.Compra", b =>
                {
                    b.HasOne("LignarisBack.Models.Empleado", "IdEmpleadoNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdEmpleado")
                        .IsRequired()
                        .HasConstraintName("fk_id_empleado_compra");

                    b.HasOne("LignarisBack.Models.Proveedor", "IdProveedorNavigation")
                        .WithMany("Compras")
                        .HasForeignKey("IdProveedor")
                        .IsRequired()
                        .HasConstraintName("fk_id_proveedor_compra");

                    b.Navigation("IdEmpleadoNavigation");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("LignarisBack.Models.CompraDetalle", b =>
                {
                    b.HasOne("LignarisBack.Models.Compra", "IdCompraNavigation")
                        .WithMany("CompraDetalles")
                        .HasForeignKey("IdCompra")
                        .HasConstraintName("fk_id_compra_detalle");

                    b.HasOne("LignarisBack.Models.MateriaPrima", "IdMateriaPrimaNavigation")
                        .WithMany("CompraDetalles")
                        .HasForeignKey("IdMateriaPrima")
                        .HasConstraintName("fk_id_detalle_compra_materia_prima");

                    b.Navigation("IdCompraNavigation");

                    b.Navigation("IdMateriaPrimaNavigation");
                });

            modelBuilder.Entity("LignarisBack.Models.Empleado", b =>
                {
                    b.HasOne("LignarisBack.Models.Persona", "IdPersonaNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("IdPersona")
                        .IsRequired()
                        .HasConstraintName("FK_id_persona_empleado");

                    b.HasOne("LignarisBack.Models.AppUser", "IdUsuarioNavigation")
                        .WithMany("Empleados")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_id_usuario_empleado");

                    b.Navigation("IdPersonaNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("LignarisBack.Models.Inventario", b =>
                {
                    b.HasOne("LignarisBack.Models.CompraDetalle", "IdCompraDetalleNavigation")
                        .WithMany("Inventarios")
                        .HasForeignKey("IdCompraDetalle")
                        .HasConstraintName("fk_id_compra_detalle_inventario");

                    b.Navigation("IdCompraDetalleNavigation");
                });

            modelBuilder.Entity("LignarisBack.Models.MateriaProveedorIntermedium", b =>
                {
                    b.HasOne("LignarisBack.Models.MateriaPrima", "IdMateriaPrimaNavigation")
                        .WithMany("MateriaProveedorIntermedia")
                        .HasForeignKey("IdMateriaPrima")
                        .IsRequired()
                        .HasConstraintName("FK_id_materia_prima");

                    b.HasOne("LignarisBack.Models.Proveedor", "IdProveedorNavigation")
                        .WithMany("MateriaProveedorIntermedia")
                        .HasForeignKey("IdProveedor")
                        .IsRequired()
                        .HasConstraintName("FK_id_proveedor");

                    b.Navigation("IdMateriaPrimaNavigation");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("LignarisBack.Models.Produccion", b =>
                {
                    b.HasOne("LignarisBack.Models.Empleado", "IdEmpleadoNavigation")
                        .WithMany("Produccions")
                        .HasForeignKey("IdEmpleado")
                        .HasConstraintName("fk_id_empleado_produccion");

                    b.HasOne("LignarisBack.Models.Ventum", "IdVentaNavigation")
                        .WithMany("Produccions")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("fk_id_solicitud_produccion");

                    b.Navigation("IdEmpleadoNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("LignarisBack.Models.Proveedor", b =>
                {
                    b.HasOne("LignarisBack.Models.Persona", "IdPersonaNavigation")
                        .WithMany("Proveedors")
                        .HasForeignKey("IdPersona")
                        .IsRequired()
                        .HasConstraintName("FK_id_persona_proveedor");

                    b.Navigation("IdPersonaNavigation");
                });

            modelBuilder.Entity("LignarisBack.Models.RecetaDetalle", b =>
                {
                    b.HasOne("LignarisBack.Models.MateriaPrima", "IdMateriaPrimaNavigation")
                        .WithMany("RecetaDetalles")
                        .HasForeignKey("IdMateriaPrima")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_id_materia_prima_receta_detalle");

                    b.HasOne("LignarisBack.Models.Recetum", "IdRecetaNavigation")
                        .WithMany("RecetaDetalles")
                        .HasForeignKey("IdReceta")
                        .HasConstraintName("fk_id_receta_receta_detalle");

                    b.Navigation("IdMateriaPrimaNavigation");

                    b.Navigation("IdRecetaNavigation");
                });

            modelBuilder.Entity("LignarisBack.Models.RegistroSesione", b =>
                {
                    b.HasOne("LignarisBack.Models.AppUser", "IdUsuarioNavigation")
                        .WithMany("RegistroSesiones")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("fk_id_usuario_registro");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("LignarisBack.Models.VentaDetalle", b =>
                {
                    b.HasOne("LignarisBack.Models.Recetum", "IdRecetaNavigation")
                        .WithMany("VentaDetalles")
                        .HasForeignKey("IdReceta")
                        .HasConstraintName("fk_id_receta");

                    b.HasOne("LignarisBack.Models.Ventum", "IdVentaNavigation")
                        .WithMany("VentaDetalles")
                        .HasForeignKey("IdVenta")
                        .HasConstraintName("fK_id_venta_detalle");

                    b.Navigation("IdRecetaNavigation");

                    b.Navigation("IdVentaNavigation");
                });

            modelBuilder.Entity("LignarisBack.Models.Ventum", b =>
                {
                    b.HasOne("LignarisBack.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("fk_id_cliente_compra");

                    b.HasOne("LignarisBack.Models.Empleado", "IdEmpleadoNavigation")
                        .WithMany("Venta")
                        .HasForeignKey("IdEmpleado")
                        .HasConstraintName("fk_id_empleado_venta");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdEmpleadoNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("LignarisBack.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("LignarisBack.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LignarisBack.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("LignarisBack.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LignarisBack.Models.AppUser", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Empleados");

                    b.Navigation("RegistroSesiones");
                });

            modelBuilder.Entity("LignarisBack.Models.Cliente", b =>
                {
                    b.Navigation("CarritoCompras");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("LignarisBack.Models.Compra", b =>
                {
                    b.Navigation("CompraDetalles");
                });

            modelBuilder.Entity("LignarisBack.Models.CompraDetalle", b =>
                {
                    b.Navigation("Inventarios");
                });

            modelBuilder.Entity("LignarisBack.Models.Empleado", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("Produccions");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("LignarisBack.Models.MateriaPrima", b =>
                {
                    b.Navigation("CompraDetalles");

                    b.Navigation("MateriaProveedorIntermedia");

                    b.Navigation("RecetaDetalles");
                });

            modelBuilder.Entity("LignarisBack.Models.Persona", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Empleados");

                    b.Navigation("Proveedors");
                });

            modelBuilder.Entity("LignarisBack.Models.Proveedor", b =>
                {
                    b.Navigation("Compras");

                    b.Navigation("MateriaProveedorIntermedia");
                });

            modelBuilder.Entity("LignarisBack.Models.Recetum", b =>
                {
                    b.Navigation("CarritoCompras");

                    b.Navigation("RecetaDetalles");

                    b.Navigation("VentaDetalles");
                });

            modelBuilder.Entity("LignarisBack.Models.Ventum", b =>
                {
                    b.Navigation("Produccions");

                    b.Navigation("VentaDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
